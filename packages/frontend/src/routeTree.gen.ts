/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as PrivacyPolicyImport } from './routes/privacy-policy'
import { Route as OnboardingImport } from './routes/onboarding'
import { Route as LegalImport } from './routes/legal'
import { Route as AccountingImport } from './routes/accounting'
import { Route as AboutImport } from './routes/about'
import { Route as ShareRouteImport } from './routes/share/route'
import { Route as IndexImport } from './routes/index'
import { Route as AuthSignupImport } from './routes/auth/signup'
import { Route as AuthSignImport } from './routes/auth/sign'
import { Route as AuthLoginImport } from './routes/auth/login'
import { Route as ShareDealsDealIdIndexImport } from './routes/share/deals/$dealId/index'
import { Route as ShareDealsDealIdDocumentIdImport } from './routes/share/deals/$dealId/$documentId'

// Create/Update Routes

const PrivacyPolicyRoute = PrivacyPolicyImport.update({
  id: '/privacy-policy',
  path: '/privacy-policy',
  getParentRoute: () => rootRoute,
} as any)

const OnboardingRoute = OnboardingImport.update({
  id: '/onboarding',
  path: '/onboarding',
  getParentRoute: () => rootRoute,
} as any)

const LegalRoute = LegalImport.update({
  id: '/legal',
  path: '/legal',
  getParentRoute: () => rootRoute,
} as any)

const AccountingRoute = AccountingImport.update({
  id: '/accounting',
  path: '/accounting',
  getParentRoute: () => rootRoute,
} as any)

const AboutRoute = AboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const ShareRouteRoute = ShareRouteImport.update({
  id: '/share',
  path: '/share',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AuthSignupRoute = AuthSignupImport.update({
  id: '/auth/signup',
  path: '/auth/signup',
  getParentRoute: () => rootRoute,
} as any)

const AuthSignRoute = AuthSignImport.update({
  id: '/auth/sign',
  path: '/auth/sign',
  getParentRoute: () => rootRoute,
} as any)

const AuthLoginRoute = AuthLoginImport.update({
  id: '/auth/login',
  path: '/auth/login',
  getParentRoute: () => rootRoute,
} as any)

const ShareDealsDealIdIndexRoute = ShareDealsDealIdIndexImport.update({
  id: '/deals/$dealId/',
  path: '/deals/$dealId/',
  getParentRoute: () => ShareRouteRoute,
} as any)

const ShareDealsDealIdDocumentIdRoute = ShareDealsDealIdDocumentIdImport.update(
  {
    id: '/deals/$dealId/$documentId',
    path: '/deals/$dealId/$documentId',
    getParentRoute: () => ShareRouteRoute,
  } as any,
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/share': {
      id: '/share'
      path: '/share'
      fullPath: '/share'
      preLoaderRoute: typeof ShareRouteImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/accounting': {
      id: '/accounting'
      path: '/accounting'
      fullPath: '/accounting'
      preLoaderRoute: typeof AccountingImport
      parentRoute: typeof rootRoute
    }
    '/legal': {
      id: '/legal'
      path: '/legal'
      fullPath: '/legal'
      preLoaderRoute: typeof LegalImport
      parentRoute: typeof rootRoute
    }
    '/onboarding': {
      id: '/onboarding'
      path: '/onboarding'
      fullPath: '/onboarding'
      preLoaderRoute: typeof OnboardingImport
      parentRoute: typeof rootRoute
    }
    '/privacy-policy': {
      id: '/privacy-policy'
      path: '/privacy-policy'
      fullPath: '/privacy-policy'
      preLoaderRoute: typeof PrivacyPolicyImport
      parentRoute: typeof rootRoute
    }
    '/auth/login': {
      id: '/auth/login'
      path: '/auth/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginImport
      parentRoute: typeof rootRoute
    }
    '/auth/sign': {
      id: '/auth/sign'
      path: '/auth/sign'
      fullPath: '/auth/sign'
      preLoaderRoute: typeof AuthSignImport
      parentRoute: typeof rootRoute
    }
    '/auth/signup': {
      id: '/auth/signup'
      path: '/auth/signup'
      fullPath: '/auth/signup'
      preLoaderRoute: typeof AuthSignupImport
      parentRoute: typeof rootRoute
    }
    '/share/deals/$dealId/$documentId': {
      id: '/share/deals/$dealId/$documentId'
      path: '/deals/$dealId/$documentId'
      fullPath: '/share/deals/$dealId/$documentId'
      preLoaderRoute: typeof ShareDealsDealIdDocumentIdImport
      parentRoute: typeof ShareRouteImport
    }
    '/share/deals/$dealId/': {
      id: '/share/deals/$dealId/'
      path: '/deals/$dealId'
      fullPath: '/share/deals/$dealId'
      preLoaderRoute: typeof ShareDealsDealIdIndexImport
      parentRoute: typeof ShareRouteImport
    }
  }
}

// Create and export the route tree

interface ShareRouteRouteChildren {
  ShareDealsDealIdDocumentIdRoute: typeof ShareDealsDealIdDocumentIdRoute
  ShareDealsDealIdIndexRoute: typeof ShareDealsDealIdIndexRoute
}

const ShareRouteRouteChildren: ShareRouteRouteChildren = {
  ShareDealsDealIdDocumentIdRoute: ShareDealsDealIdDocumentIdRoute,
  ShareDealsDealIdIndexRoute: ShareDealsDealIdIndexRoute,
}

const ShareRouteRouteWithChildren = ShareRouteRoute._addFileChildren(
  ShareRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/share': typeof ShareRouteRouteWithChildren
  '/about': typeof AboutRoute
  '/accounting': typeof AccountingRoute
  '/legal': typeof LegalRoute
  '/onboarding': typeof OnboardingRoute
  '/privacy-policy': typeof PrivacyPolicyRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/sign': typeof AuthSignRoute
  '/auth/signup': typeof AuthSignupRoute
  '/share/deals/$dealId/$documentId': typeof ShareDealsDealIdDocumentIdRoute
  '/share/deals/$dealId': typeof ShareDealsDealIdIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/share': typeof ShareRouteRouteWithChildren
  '/about': typeof AboutRoute
  '/accounting': typeof AccountingRoute
  '/legal': typeof LegalRoute
  '/onboarding': typeof OnboardingRoute
  '/privacy-policy': typeof PrivacyPolicyRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/sign': typeof AuthSignRoute
  '/auth/signup': typeof AuthSignupRoute
  '/share/deals/$dealId/$documentId': typeof ShareDealsDealIdDocumentIdRoute
  '/share/deals/$dealId': typeof ShareDealsDealIdIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/share': typeof ShareRouteRouteWithChildren
  '/about': typeof AboutRoute
  '/accounting': typeof AccountingRoute
  '/legal': typeof LegalRoute
  '/onboarding': typeof OnboardingRoute
  '/privacy-policy': typeof PrivacyPolicyRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/sign': typeof AuthSignRoute
  '/auth/signup': typeof AuthSignupRoute
  '/share/deals/$dealId/$documentId': typeof ShareDealsDealIdDocumentIdRoute
  '/share/deals/$dealId/': typeof ShareDealsDealIdIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/share'
    | '/about'
    | '/accounting'
    | '/legal'
    | '/onboarding'
    | '/privacy-policy'
    | '/auth/login'
    | '/auth/sign'
    | '/auth/signup'
    | '/share/deals/$dealId/$documentId'
    | '/share/deals/$dealId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/share'
    | '/about'
    | '/accounting'
    | '/legal'
    | '/onboarding'
    | '/privacy-policy'
    | '/auth/login'
    | '/auth/sign'
    | '/auth/signup'
    | '/share/deals/$dealId/$documentId'
    | '/share/deals/$dealId'
  id:
    | '__root__'
    | '/'
    | '/share'
    | '/about'
    | '/accounting'
    | '/legal'
    | '/onboarding'
    | '/privacy-policy'
    | '/auth/login'
    | '/auth/sign'
    | '/auth/signup'
    | '/share/deals/$dealId/$documentId'
    | '/share/deals/$dealId/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ShareRouteRoute: typeof ShareRouteRouteWithChildren
  AboutRoute: typeof AboutRoute
  AccountingRoute: typeof AccountingRoute
  LegalRoute: typeof LegalRoute
  OnboardingRoute: typeof OnboardingRoute
  PrivacyPolicyRoute: typeof PrivacyPolicyRoute
  AuthLoginRoute: typeof AuthLoginRoute
  AuthSignRoute: typeof AuthSignRoute
  AuthSignupRoute: typeof AuthSignupRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ShareRouteRoute: ShareRouteRouteWithChildren,
  AboutRoute: AboutRoute,
  AccountingRoute: AccountingRoute,
  LegalRoute: LegalRoute,
  OnboardingRoute: OnboardingRoute,
  PrivacyPolicyRoute: PrivacyPolicyRoute,
  AuthLoginRoute: AuthLoginRoute,
  AuthSignRoute: AuthSignRoute,
  AuthSignupRoute: AuthSignupRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/share",
        "/about",
        "/accounting",
        "/legal",
        "/onboarding",
        "/privacy-policy",
        "/auth/login",
        "/auth/sign",
        "/auth/signup"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/share": {
      "filePath": "share/route.tsx",
      "children": [
        "/share/deals/$dealId/$documentId",
        "/share/deals/$dealId/"
      ]
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/accounting": {
      "filePath": "accounting.tsx"
    },
    "/legal": {
      "filePath": "legal.tsx"
    },
    "/onboarding": {
      "filePath": "onboarding.tsx"
    },
    "/privacy-policy": {
      "filePath": "privacy-policy.tsx"
    },
    "/auth/login": {
      "filePath": "auth/login.tsx"
    },
    "/auth/sign": {
      "filePath": "auth/sign.tsx"
    },
    "/auth/signup": {
      "filePath": "auth/signup.tsx"
    },
    "/share/deals/$dealId/$documentId": {
      "filePath": "share/deals/$dealId/$documentId.tsx",
      "parent": "/share"
    },
    "/share/deals/$dealId/": {
      "filePath": "share/deals/$dealId/index.tsx",
      "parent": "/share"
    }
  }
}
ROUTE_MANIFEST_END */
