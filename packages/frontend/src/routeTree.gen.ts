/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as OnboardingImport } from './routes/onboarding'
import { Route as AboutImport } from './routes/about'
import { Route as DashboardRouteImport } from './routes/dashboard/route'
import { Route as IndexImport } from './routes/index'
import { Route as ShareRouterImport } from './routes/share/router'
import { Route as AuthSignupImport } from './routes/auth/signup'
import { Route as AuthLoginImport } from './routes/auth/login'
import { Route as DashboardEmployeesIndexImport } from './routes/dashboard/employees/index'
import { Route as DashboardDocumentsIndexImport } from './routes/dashboard/documents/index'
import { Route as ShareDealsDealImport } from './routes/share/deals/$deal'
import { Route as DashboardEmployeesIdImport } from './routes/dashboard/employees/$id'
import { Route as DashboardDocumentsFoldersFolderPathImport } from './routes/dashboard/documents/folders.$folderPath'

// Create/Update Routes

const OnboardingRoute = OnboardingImport.update({
  id: '/onboarding',
  path: '/onboarding',
  getParentRoute: () => rootRoute,
} as any)

const AboutRoute = AboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const DashboardRouteRoute = DashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ShareRouterRoute = ShareRouterImport.update({
  id: '/share/router',
  path: '/share/router',
  getParentRoute: () => rootRoute,
} as any)

const AuthSignupRoute = AuthSignupImport.update({
  id: '/auth/signup',
  path: '/auth/signup',
  getParentRoute: () => rootRoute,
} as any)

const AuthLoginRoute = AuthLoginImport.update({
  id: '/auth/login',
  path: '/auth/login',
  getParentRoute: () => rootRoute,
} as any)

const DashboardEmployeesIndexRoute = DashboardEmployeesIndexImport.update({
  id: '/employees/',
  path: '/employees/',
  getParentRoute: () => DashboardRouteRoute,
} as any)

const DashboardDocumentsIndexRoute = DashboardDocumentsIndexImport.update({
  id: '/documents/',
  path: '/documents/',
  getParentRoute: () => DashboardRouteRoute,
} as any)

const ShareDealsDealRoute = ShareDealsDealImport.update({
  id: '/share/deals/$deal',
  path: '/share/deals/$deal',
  getParentRoute: () => rootRoute,
} as any)

const DashboardEmployeesIdRoute = DashboardEmployeesIdImport.update({
  id: '/employees/$id',
  path: '/employees/$id',
  getParentRoute: () => DashboardRouteRoute,
} as any)

const DashboardDocumentsFoldersFolderPathRoute =
  DashboardDocumentsFoldersFolderPathImport.update({
    id: '/documents/folders/$folderPath',
    path: '/documents/folders/$folderPath',
    getParentRoute: () => DashboardRouteRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardRouteImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/onboarding': {
      id: '/onboarding'
      path: '/onboarding'
      fullPath: '/onboarding'
      preLoaderRoute: typeof OnboardingImport
      parentRoute: typeof rootRoute
    }
    '/auth/login': {
      id: '/auth/login'
      path: '/auth/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginImport
      parentRoute: typeof rootRoute
    }
    '/auth/signup': {
      id: '/auth/signup'
      path: '/auth/signup'
      fullPath: '/auth/signup'
      preLoaderRoute: typeof AuthSignupImport
      parentRoute: typeof rootRoute
    }
    '/share/router': {
      id: '/share/router'
      path: '/share/router'
      fullPath: '/share/router'
      preLoaderRoute: typeof ShareRouterImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/employees/$id': {
      id: '/dashboard/employees/$id'
      path: '/employees/$id'
      fullPath: '/dashboard/employees/$id'
      preLoaderRoute: typeof DashboardEmployeesIdImport
      parentRoute: typeof DashboardRouteImport
    }
    '/share/deals/$deal': {
      id: '/share/deals/$deal'
      path: '/share/deals/$deal'
      fullPath: '/share/deals/$deal'
      preLoaderRoute: typeof ShareDealsDealImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/documents/': {
      id: '/dashboard/documents/'
      path: '/documents'
      fullPath: '/dashboard/documents'
      preLoaderRoute: typeof DashboardDocumentsIndexImport
      parentRoute: typeof DashboardRouteImport
    }
    '/dashboard/employees/': {
      id: '/dashboard/employees/'
      path: '/employees'
      fullPath: '/dashboard/employees'
      preLoaderRoute: typeof DashboardEmployeesIndexImport
      parentRoute: typeof DashboardRouteImport
    }
    '/dashboard/documents/folders/$folderPath': {
      id: '/dashboard/documents/folders/$folderPath'
      path: '/documents/folders/$folderPath'
      fullPath: '/dashboard/documents/folders/$folderPath'
      preLoaderRoute: typeof DashboardDocumentsFoldersFolderPathImport
      parentRoute: typeof DashboardRouteImport
    }
  }
}

// Create and export the route tree

interface DashboardRouteRouteChildren {
  DashboardEmployeesIdRoute: typeof DashboardEmployeesIdRoute
  DashboardDocumentsIndexRoute: typeof DashboardDocumentsIndexRoute
  DashboardEmployeesIndexRoute: typeof DashboardEmployeesIndexRoute
  DashboardDocumentsFoldersFolderPathRoute: typeof DashboardDocumentsFoldersFolderPathRoute
}

const DashboardRouteRouteChildren: DashboardRouteRouteChildren = {
  DashboardEmployeesIdRoute: DashboardEmployeesIdRoute,
  DashboardDocumentsIndexRoute: DashboardDocumentsIndexRoute,
  DashboardEmployeesIndexRoute: DashboardEmployeesIndexRoute,
  DashboardDocumentsFoldersFolderPathRoute:
    DashboardDocumentsFoldersFolderPathRoute,
}

const DashboardRouteRouteWithChildren = DashboardRouteRoute._addFileChildren(
  DashboardRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRouteRouteWithChildren
  '/about': typeof AboutRoute
  '/onboarding': typeof OnboardingRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/signup': typeof AuthSignupRoute
  '/share/router': typeof ShareRouterRoute
  '/dashboard/employees/$id': typeof DashboardEmployeesIdRoute
  '/share/deals/$deal': typeof ShareDealsDealRoute
  '/dashboard/documents': typeof DashboardDocumentsIndexRoute
  '/dashboard/employees': typeof DashboardEmployeesIndexRoute
  '/dashboard/documents/folders/$folderPath': typeof DashboardDocumentsFoldersFolderPathRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRouteRouteWithChildren
  '/about': typeof AboutRoute
  '/onboarding': typeof OnboardingRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/signup': typeof AuthSignupRoute
  '/share/router': typeof ShareRouterRoute
  '/dashboard/employees/$id': typeof DashboardEmployeesIdRoute
  '/share/deals/$deal': typeof ShareDealsDealRoute
  '/dashboard/documents': typeof DashboardDocumentsIndexRoute
  '/dashboard/employees': typeof DashboardEmployeesIndexRoute
  '/dashboard/documents/folders/$folderPath': typeof DashboardDocumentsFoldersFolderPathRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRouteRouteWithChildren
  '/about': typeof AboutRoute
  '/onboarding': typeof OnboardingRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/signup': typeof AuthSignupRoute
  '/share/router': typeof ShareRouterRoute
  '/dashboard/employees/$id': typeof DashboardEmployeesIdRoute
  '/share/deals/$deal': typeof ShareDealsDealRoute
  '/dashboard/documents/': typeof DashboardDocumentsIndexRoute
  '/dashboard/employees/': typeof DashboardEmployeesIndexRoute
  '/dashboard/documents/folders/$folderPath': typeof DashboardDocumentsFoldersFolderPathRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/dashboard'
    | '/about'
    | '/onboarding'
    | '/auth/login'
    | '/auth/signup'
    | '/share/router'
    | '/dashboard/employees/$id'
    | '/share/deals/$deal'
    | '/dashboard/documents'
    | '/dashboard/employees'
    | '/dashboard/documents/folders/$folderPath'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/dashboard'
    | '/about'
    | '/onboarding'
    | '/auth/login'
    | '/auth/signup'
    | '/share/router'
    | '/dashboard/employees/$id'
    | '/share/deals/$deal'
    | '/dashboard/documents'
    | '/dashboard/employees'
    | '/dashboard/documents/folders/$folderPath'
  id:
    | '__root__'
    | '/'
    | '/dashboard'
    | '/about'
    | '/onboarding'
    | '/auth/login'
    | '/auth/signup'
    | '/share/router'
    | '/dashboard/employees/$id'
    | '/share/deals/$deal'
    | '/dashboard/documents/'
    | '/dashboard/employees/'
    | '/dashboard/documents/folders/$folderPath'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DashboardRouteRoute: typeof DashboardRouteRouteWithChildren
  AboutRoute: typeof AboutRoute
  OnboardingRoute: typeof OnboardingRoute
  AuthLoginRoute: typeof AuthLoginRoute
  AuthSignupRoute: typeof AuthSignupRoute
  ShareRouterRoute: typeof ShareRouterRoute
  ShareDealsDealRoute: typeof ShareDealsDealRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DashboardRouteRoute: DashboardRouteRouteWithChildren,
  AboutRoute: AboutRoute,
  OnboardingRoute: OnboardingRoute,
  AuthLoginRoute: AuthLoginRoute,
  AuthSignupRoute: AuthSignupRoute,
  ShareRouterRoute: ShareRouterRoute,
  ShareDealsDealRoute: ShareDealsDealRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/dashboard",
        "/about",
        "/onboarding",
        "/auth/login",
        "/auth/signup",
        "/share/router",
        "/share/deals/$deal"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/dashboard": {
      "filePath": "dashboard/route.tsx",
      "children": [
        "/dashboard/employees/$id",
        "/dashboard/documents/",
        "/dashboard/employees/",
        "/dashboard/documents/folders/$folderPath"
      ]
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/onboarding": {
      "filePath": "onboarding.tsx"
    },
    "/auth/login": {
      "filePath": "auth/login.tsx"
    },
    "/auth/signup": {
      "filePath": "auth/signup.tsx"
    },
    "/share/router": {
      "filePath": "share/router.tsx"
    },
    "/dashboard/employees/$id": {
      "filePath": "dashboard/employees/$id.tsx",
      "parent": "/dashboard"
    },
    "/share/deals/$deal": {
      "filePath": "share/deals/$deal.tsx"
    },
    "/dashboard/documents/": {
      "filePath": "dashboard/documents/index.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/employees/": {
      "filePath": "dashboard/employees/index.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/documents/folders/$folderPath": {
      "filePath": "dashboard/documents/folders.$folderPath.tsx",
      "parent": "/dashboard"
    }
  }
}
ROUTE_MANIFEST_END */
